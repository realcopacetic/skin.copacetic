<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<include name="Infoscreen_PathTracing">
		<!-- first load -->
		<onload condition="!String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,1)</onload>
		<onload condition="!String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">SetProperty(ContainerPath_1,$VAR[ContainerPath_1])</onload>
		<onload condition="!String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">SetProperty(Origin,$INFO[Window(home).Property(Home_Widget)],home)</onload>
		<onload condition="!String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">ClearProperty(ContainerPath_2)</onload>
		<onload condition="!String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">ClearProperty(ContainerPath_3)</onload>
		<onload condition="!String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">ClearProperty(ContainerPath_4)</onload>
		<onload condition="!String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">ClearProperty(ContainerPath_5)</onload>
		<onload condition="!String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">ClearProperty(ContainerPath_6)</onload>
		<onload condition="!String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">ClearProperty(ContainerPath_7)</onload>
		<onload condition="!String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">ClearProperty(ContainerPath_8)</onload>
		<onload condition="!String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">ClearProperty(ContainerPath_9)</onload>
		<onload condition="!String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">ClearProperty(ContainerPath_10)</onload>
	
		<!-- loop: If previous container path is occupied and GoToNext true, -->
		<onload condition="String.IsEmpty(Window.Property(ContainerPath_10)) + !String.IsEmpty(Window.Property(ContainerPath_9)) + String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">SetProperty(ContainerPath_10,$VAR[ContainerPath_X])</onload>
		<onload condition="String.IsEmpty(Window.Property(ContainerPath_9)) + !String.IsEmpty(Window.Property(ContainerPath_8)) + String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">SetProperty(ContainerPath_9,$VAR[ContainerPath_X])</onload>
		<onload condition="String.IsEmpty(Window.Property(ContainerPath_8)) + !String.IsEmpty(Window.Property(ContainerPath_7)) + String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">SetProperty(ContainerPath_8,$VAR[ContainerPath_X])</onload>
		<onload condition="String.IsEmpty(Window.Property(ContainerPath_7)) + !String.IsEmpty(Window.Property(ContainerPath_6)) + String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">SetProperty(ContainerPath_7,$VAR[ContainerPath_X])</onload>
		<onload condition="String.IsEmpty(Window.Property(ContainerPath_6)) + !String.IsEmpty(Window.Property(ContainerPath_5)) + String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">SetProperty(ContainerPath_6,$VAR[ContainerPath_X])</onload>
		<onload condition="String.IsEmpty(Window.Property(ContainerPath_5)) + !String.IsEmpty(Window.Property(ContainerPath_4)) + String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">SetProperty(ContainerPath_5,$VAR[ContainerPath_X])</onload>
		<onload condition="String.IsEmpty(Window.Property(ContainerPath_4)) + !String.IsEmpty(Window.Property(ContainerPath_3)) + String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">SetProperty(ContainerPath_4,$VAR[ContainerPath_X])</onload>
		<onload condition="String.IsEmpty(Window.Property(ContainerPath_3)) + !String.IsEmpty(Window.Property(ContainerPath_2)) + String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">SetProperty(ContainerPath_3,$VAR[ContainerPath_X])</onload>
		<onload condition="String.IsEmpty(Window.Property(ContainerPath_2)) + !String.IsEmpty(Window.Property(ContainerPath_1)) + String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">SetProperty(ContainerPath_2,$VAR[ContainerPath_X])</onload>
		
		<onload condition="String.IsEmpty(Window.Property(ContainerPath_2)) + !String.IsEmpty(Window.Property(ContainerPath_1)) + String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,2)</onload>
		<onload condition="String.IsEmpty(Window.Property(ContainerPath_3)) + !String.IsEmpty(Window.Property(ContainerPath_2)) + String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,3)</onload>
		<onload condition="String.IsEmpty(Window.Property(ContainerPath_4)) + !String.IsEmpty(Window.Property(ContainerPath_3)) + String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,4)</onload>
		<onload condition="String.IsEmpty(Window.Property(ContainerPath_5)) + !String.IsEmpty(Window.Property(ContainerPath_4)) + String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,5)</onload>
		<onload condition="String.IsEmpty(Window.Property(ContainerPath_6)) + !String.IsEmpty(Window.Property(ContainerPath_5)) + String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,6)</onload>
		<onload condition="String.IsEmpty(Window.Property(ContainerPath_7)) + !String.IsEmpty(Window.Property(ContainerPath_6)) + String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,7)</onload>
		<onload condition="String.IsEmpty(Window.Property(ContainerPath_8)) + !String.IsEmpty(Window.Property(ContainerPath_7)) + String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,8)</onload>
		<onload condition="String.IsEmpty(Window.Property(ContainerPath_9)) + !String.IsEmpty(Window.Property(ContainerPath_8)) + String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,9)</onload>
		<onload condition="String.IsEmpty(Window.Property(ContainerPath_10)) + !String.IsEmpty(Window.Property(ContainerPath_9)) + String.IsEqual(Window.Property(Breadcrumb_GoToNext),true) + !String.IsEqual(Window.Property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,10)</onload>
		
		<onload>ClearProperty(SentFromInfo)</onload>
		<onload>ClearProperty(Breadcrumb_GoToPrevious)</onload>
		<onload>ClearProperty(Breadcrumb_GoToNext)</onload>
	</include>

	<include name="movieinformation_OnLoadUnload">
		<onload condition="Skin.HasSetting(Trailer_Autoplay) + String.IsEqual(Window(home).Property(Trailer_Autoplay),true) + Player.HasVideo">PlayerControl(Stop)</onload>
		<onload condition="Skin.HasSetting(Trailer_Autoplay) + String.IsEqual(Window(home).Property(Trailer_Autoplay),true)">ClearProperty(Trailer_Autoplay,home)</onload>
		<onload condition="!String.IsEmpty(ListItem.DBID)">SetProperty(SelectedItem,$INFO[ListItem.DBID],movieinformation)</onload>
		<onload condition="String.IsEmpty(ListItem.DBID) + !String.IsEmpty(ListItem.Property(tmdb_id))">SetProperty(SelectedItem,$INFO[ListItem.Property(tmdb_id)],movieinformation)</onload>
		<onload>SetProperty(ResetScroll," ")</onload>
		<include content="Infoscreen_PathTracing" />
		<include content="Widget_Position_Reset_OnLoad" />
		<onunload>ClearProperty(Focused_Button,movieinformation)</onunload>
	</include>

	<include name="musicinformation_OnLoadUnload">
		<onload condition="String.IsEqual(ListItem.DBType,artist)">SetProperty(Info_Type,artist,musicinformation)</onload>
		<onload condition="String.IsEqual(ListItem.DBType,album)">SetProperty(Info_Type,album,musicinformation)</onload>
		<onload>SetProperty(SelectedItem,$INFO[ListItem.DBID],musicinformation)</onload>
		<onload>SetProperty(ResetScroll," ")</onload>
		<include content="Infoscreen_PathTracing" />
		<include content="Widget_Position_Reset_OnLoad" />
		<onunload>ClearProperty(Focused_Button,musicinformation)</onunload>
	</include>

	<include name="skinsettings_OnLoadUnload">
		<include content="Object_Include" condition="Window.Is(interfacesettings)">
			<defaultcontrol always="true">3002</defaultcontrol>
		</include>
		<include content="Object_Include" condition="Window.Is(mediasettings)">
			<defaultcontrol always="true">3003</defaultcontrol>
		</include>
		<include content="Object_Include" condition="Window.Is(playersettings)">
			<defaultcontrol always="true">3004</defaultcontrol>
		</include>
		<include content="Object_Include" condition="Window.Is(systemsettings)">
			<defaultcontrol always="true">3005</defaultcontrol>
		</include>
		<include content="Object_Include" condition="Window.Is(servicesettings)">
			<defaultcontrol always="true">3006</defaultcontrol>
		</include>
		<include content="Object_Include" condition="Window.Is(gamesettings)">
			<defaultcontrol always="true">3007</defaultcontrol>
		</include>
		<include content="Object_Include" condition="Window.Is(pvrsettings)">
			<defaultcontrol always="true">3008</defaultcontrol>
		</include>
	</include>

</includes>